name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:


jobs:
  version:
    name: Version Bump
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Python Dependencies
        run: |
          pip install semver

      - name: Determine Version
        run: |
          VERSION=$(cat version)
          if [[ $GITHUB_REF_TYPE == "tag" ]]; then
            echo "TAG=${GITHUB_REF_NAME}" >> build.env
            BUMP_TYPE=major
          elif [[ $GITHUB_REF_NAME == $DEFAULT_BRANCH ]]; then
            echo "TAG=latest" >> build.env
            BUMP_TYPE=minor
          else
            echo "TAG=${GITHUB_REF_NAME}" >> build.env
            BUMP_TYPE=patch
          fi
          echo "BUMP_TYPE=$BUMP_TYPE" >> build.env
          python3 -m semver bump $BUMP_TYPE $VERSION > version
      - name: Save Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: version

  build:
    name: Build and Package
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Version Artifact
        uses: actions/download-artifact@v3
        with:
          name: version

      - name: Setup Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y make protobuf-compiler curl zip
          pip install -r requirements.txt

      - name: Build Project
        run: |
          VERSION=$(cat version)
          echo "Building version $VERSION"
          sed -i 's/version = "[^"]*"/version = "'$VERSION'"/' pyproject.toml
          python generate.py
          ZIPFILE=${{ github.event.repository.name }}-$VERSION.zip
          ls -la
          zip -r ${ZIPFILE} chirpstack_api
          poetry build
          ls -la

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
            name: chirpstack-api-${{ github.event.repository.name }}-${{ github.event_name == 'push' && github.ref_type != 'tag' && 'latest' || 'stable' }}
            path: Chirpstack-API-*.zip


#   commit:
#     name: Commit Version Changes
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Configure Git
#         run: |
#           git config --global user.email "ci-bot@ao-inc.com"
#           git config --global user.name "ci-bot"

#       - name: Commit Changes
#         env:
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#             TAG: ${{ steps.tag.outputs.tag }}
#             BUMP_TYPE: ${{ steps.bump_type.outputs.bump_type }}
#         run: |
#             echo "Committing new version to git"
#             echo "TAG=$TAG"
#             echo "BUMP_TYPE=$BUMP_TYPE"
#             git config --global user.email "ci-bot@ao-inc.com"
#             git config --global user.name "ci-bot"
#             git fetch origin
#             git branch -D ${{ github.ref_name }} || true
#             git checkout -b ${{ github.ref_name }} origin/${{ github.ref_name }}
#             git add version
#             git commit -m "CI updated version [skip ci]"
#             git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
#             git push origin ${{ github.ref_name }}

